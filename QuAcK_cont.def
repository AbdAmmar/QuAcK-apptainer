Bootstrap: docker
From: ubuntu:22.04

%post

    echo -e "\e[34mDEPENDENCIES\e[0m"
    apt update && apt install -y --no-install-recommends \
        python3-pip \
        python3-dev \
        build-essential \
        libopenblas-dev \
        liblapack-dev \
        git \
        gfortran \
        gpg \
        wget \
        make \
        ninja-build \
        bash

    echo -e "\e[34mINTEL COMPILER\e[0m"
    wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB | gpg --dearmor | tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null
    echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main" | tee /etc/apt/sources.list.d/oneAPI.list
    apt update
    apt install -y intel-oneapi-compiler-fortran
    apt install -y intel-oneapi-mkl
    ln -s /opt/intel/oneapi/compiler/latest/bin/ifx /opt/intel/oneapi/compiler/latest/bin/ifort
    ln -s /usr/lib/x86_64-linux-gnu/libstdc++.so.6 /usr/lib/x86_64-linux-gnu/libstdc++.so
    bash -c "source /opt/intel/oneapi/setvars.sh && which ifort"

    echo -e "\e[34mPySCF\e[0m"
    pip3 install pyscf

    echo -e "\e[34mINSTALL QUACK\e[0m"
    git clone https://github.com/pfloos/QuAcK.git --branch=master
    export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
    export PYTHONPATH=/usr/local/lib/python3.10/dist-packages:$PYTHONPATH
    cd QuAcK
    export QUACK_ROOT=$PWD
    bash -c "source /opt/intel/oneapi/setvars.sh && make"

    echo -e "\e[34mCLEAN UP\e[0m"
    apt clean && rm -rf /var/lib/apt/lists/*

%environment
    export PATH=/usr/local/bin:$PATH

%runscript
    #!/bin/bash

    if [ "$1" == "generate-methods" ]; then

        if [ -n "$2" ]; then
            echo "$2" > QuAcK/input/methods
        else
            echo "Provide methds input"
        fi

    elif [ "$1" == "generate-options" ]; then

        if [ -n "$2" ]; then
            echo "$2" > QuAcK/input/options
        else
            echo "Provide options input"
        fi

    elif [ "$1" == "generate-geometry" ]; then

        #ls
        #ls QuAcK
        #ls QuAcK/input
        if [ -n "$2" ]; then
            if [ -n "$3" ]; then
                echo "$3" > QuAcK/mol/$2
            else
                echo "Provide geometry"
            fi
        else
            echo "Provide molecule name"
        fi

    elif [ "$1" == "lunch-QuAcK" ]; then

        if [ -n "$2" ]; then
            if [ -n "$3" ]; then
                if [ -n "$4" ]; then
		    cd QuAcK
                    ls
                    #export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
                    #export PYTHONPATH=/usr/local/lib/python3.10/dist-packages:$PYTHONPATH
                    #export QUACK_ROOT=$PWD
                    python3.10 PyDuck.py --working_dir $2 -x $3 -b "$4"
                else
                    echo "Provide basis"
                fi
            else
                echo "Provide molecule name"
            fi
       else
            echo "Provide working_dir"
        fi

    else

        echo "Invalid option."

    fi

%labels
    Label QuAcK container
    Author AbdAmmar
    Version v0.1.0



